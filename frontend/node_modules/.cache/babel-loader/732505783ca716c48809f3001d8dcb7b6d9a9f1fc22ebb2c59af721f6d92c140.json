{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Scratch\\\\frontend\\\\src\\\\pages\\\\ForgotPasswordPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, {\n        email\n      });\n      setMessage(response.data.msg);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'Failed to send password reset email.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Enter your email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPasswordPage, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","post","process","env","REACT_APP_API_URL","data","msg","err","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Scratch/frontend/src/pages/ForgotPasswordPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ForgotPasswordPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n        setError('');\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/auth/forgot-password`, { email });\r\n            setMessage(response.data.msg);\r\n        } catch (err) {\r\n            setError(err.response?.data?.msg || 'Failed to send password reset email.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Forgot Password</h2>\r\n            {message && <p style={{ color: 'green' }}>{message}</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">Enter your email address:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Send Reset Link</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}