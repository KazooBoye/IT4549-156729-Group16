{"ast":null,"code":"import React,{useContext}from'react';import{Link}from'react-router-dom';import AuthContext from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotFoundPage=()=>{const{user}=useContext(AuthContext);return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'50px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"404 - Page Not Found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Sorry, the page you are looking for does not exist.\"}),/*#__PURE__*/_jsxs(Link,{to:user?\"/dashboard\":\"/\",children:[\"Go to \",user?'Dashboard':'Homepage']})]});};export default NotFoundPage;","map":{"version":3,"names":["React","useContext","Link","AuthContext","jsx","_jsx","jsxs","_jsxs","NotFoundPage","user","style","textAlign","marginTop","children","to"],"sources":["D:/GITHUB/IT4549-156729-Group16/frontend/src/pages/NotFoundPage.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../contexts/AuthContext';\r\n\r\nconst NotFoundPage = () => {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>Sorry, the page you are looking for does not exist.</p>\r\n      <Link to={user ? \"/dashboard\" : \"/\"}>Go to {user ? 'Dashboard' : 'Homepage'}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAEC,IAAK,CAAC,CAAGR,UAAU,CAACE,WAAW,CAAC,CACxC,mBACEI,KAAA,QAAKG,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAQ,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAC,QAAA,eACrDR,IAAA,OAAAQ,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BR,IAAA,MAAAQ,QAAA,CAAG,qDAAmD,CAAG,CAAC,cAC1DN,KAAA,CAACL,IAAI,EAACY,EAAE,CAAEL,IAAI,CAAG,YAAY,CAAG,GAAI,CAAAI,QAAA,EAAC,QAAM,CAACJ,IAAI,CAAG,WAAW,CAAG,UAAU,EAAO,CAAC,EAChF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}