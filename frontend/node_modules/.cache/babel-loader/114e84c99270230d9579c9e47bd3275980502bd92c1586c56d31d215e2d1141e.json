{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITSS FILE\\\\bluemoon\\\\gym-pro-scratch'\\\\frontend\\\\src\\\\utils\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport AuthContext from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useContext(AuthContext);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this); // Or a loading spinner\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // Optional: Redirect to an unauthorized page or back to dashboard\n    // For now, redirecting to dashboard if role not allowed.\n    console.warn(`User role ${user.role} not in allowed roles: ${allowedRoles}`);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 32\n  }, this);\n};\n_s(PrivateRoute, \"nVcmz/Z77NEMBy/UMVDV0Kci2eI=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","children","allowedRoles","_s","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","includes","role","console","warn","_c","$RefreshReg$"],"sources":["D:/ITSS FILE/bluemoon/gym-pro-scratch'/frontend/src/utils/PrivateRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport AuthContext from '../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ children, allowedRoles }) => {\r\n  const { user, loading } = useContext(AuthContext);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>; // Or a loading spinner\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\r\n    // Optional: Redirect to an unauthorized page or back to dashboard\r\n    // For now, redirecting to dashboard if role not allowed.\r\n    console.warn(`User role ${user.role} not in allowed roles: ${allowedRoles}`);\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAEjD,IAAIQ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAE,QAAA,EAAG;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC5B;EAEA,IAAI,CAACL,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,IAAIP,YAAY,IAAI,CAACA,YAAY,CAACU,QAAQ,CAACR,IAAI,CAACS,IAAI,CAAC,EAAE;IACrD;IACA;IACAC,OAAO,CAACC,IAAI,CAAC,aAAaX,IAAI,CAACS,IAAI,0BAA0BX,YAAY,EAAE,CAAC;IAC5E,oBAAOH,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,OAAOR,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACN,EAAA,CAnBIH,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}